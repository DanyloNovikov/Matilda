{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newFee",
						"type": "uint256"
					}
				],
				"name": "FeeUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "orderId",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "PaymentProcessed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "shopId",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					}
				],
				"name": "ShopRegistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "supported",
						"type": "bool"
					}
				],
				"name": "TokenStatusUpdated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "USDC",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "USDT",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "calculateFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_shopId",
						"type": "string"
					}
				],
				"name": "getSellerAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_orderId",
						"type": "string"
					}
				],
				"name": "getTransaction",
				"outputs": [
					{
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "completed",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_orderId",
						"type": "string"
					}
				],
				"name": "isOrderPaid",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_shopId",
						"type": "string"
					}
				],
				"name": "isShopRegistered",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "isTokenSupported",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "platformFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_shopId",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_orderId",
						"type": "string"
					}
				],
				"name": "processPayment",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_shopId",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_orderId",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "processTokenPayment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_shopId",
						"type": "string"
					},
					{
						"internalType": "address payable",
						"name": "_seller",
						"type": "address"
					}
				],
				"name": "registerShop",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_supported",
						"type": "bool"
					}
				],
				"name": "setTokenSupport",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "shopToSeller",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "supportedTokens",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "transactions",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "seller",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "orderId",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "completed",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_newFee",
						"type": "uint256"
					}
				],
				"name": "updatePlatformFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Contract for secure payment transfer from buyer to seller with Shopify",
			"kind": "dev",
			"methods": {
				"calculateFee(uint256)": {
					"details": "Calculates the fee amount for a given payment",
					"params": {
						"_amount": "Total payment amount"
					},
					"returns": {
						"_0": "Fee amount"
					}
				},
				"getSellerAddress(string)": {
					"details": "Returns the seller address for a shop",
					"params": {
						"_shopId": "ID of the Shopify store"
					}
				},
				"getTransaction(string)": {
					"details": "Gets transaction information",
					"params": {
						"_orderId": "ID of the Shopify order"
					}
				},
				"isOrderPaid(string)": {
					"details": "Checks if an order has been paid",
					"params": {
						"_orderId": "ID of the Shopify order"
					},
					"returns": {
						"_0": "bool Payment status"
					}
				},
				"isShopRegistered(string)": {
					"details": "Checks if a shop is registered",
					"params": {
						"_shopId": "ID of the Shopify store"
					}
				},
				"isTokenSupported(address)": {
					"details": "Check if a token is supported",
					"params": {
						"_token": "Token address to check"
					}
				},
				"processPayment(string,string)": {
					"details": "Processes payment in ETH for backward compatibility",
					"params": {
						"_orderId": "ID of the Shopify order",
						"_shopId": "ID of the Shopify store"
					}
				},
				"processTokenPayment(string,string,address,uint256)": {
					"details": "Processes payment in ERC-20 tokens for a Shopify order",
					"params": {
						"_amount": "Amount of tokens to pay",
						"_orderId": "ID of the Shopify order",
						"_shopId": "ID of the Shopify store",
						"_tokenAddress": "Address of the ERC-20 token"
					}
				},
				"registerShop(string,address)": {
					"details": "Registers a Shopify store with a seller's address",
					"params": {
						"_seller": "Ethereum address of the seller",
						"_shopId": "ID of the Shopify store"
					}
				},
				"setTokenSupport(address,bool)": {
					"details": "Add or remove a token from the supported list",
					"params": {
						"_supported": "Support status",
						"_token": "Token address"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership to a new address",
					"params": {
						"newOwner": "Address of the new owner"
					}
				},
				"updatePlatformFee(uint256)": {
					"details": "Updates the platform fee (owner only)",
					"params": {
						"_newFee": "New fee (multiplied by 100, e.g., 250 = 2.5%)"
					}
				}
			},
			"title": "ShopifyPaymentProcessor",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ShopifyPaymentProcessor.sol": "ShopifyPaymentProcessor"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/FeeManager.sol": {
			"keccak256": "0x190de23158017f345fdca64c3eb002eb016cec542c662f288d27abb125bce5e5",
			"license": "MIT",
			"urls": [
				"bzz-raw://425d1ef8e0a99f775ceed5a140bf308bdc77cce9880f987d05421f23059fe1a3",
				"dweb:/ipfs/Qmeo2jDW9fLvQqYw1aWxnLcpxZ7iQEAn9VoDg9r3qcKvLH"
			]
		},
		"contracts/Ownable.sol": {
			"keccak256": "0xe18fa49e1db3036e602f6f44b9bc8b02f2a1764a625a993f86d551b078ea51fc",
			"license": "MIT",
			"urls": [
				"bzz-raw://2b1436dc778f196a5756831e2ab26c3930c222da74920a857cd4fa63da454b9f",
				"dweb:/ipfs/QmZBVoMC5TSSeAbMc8VeeoTJsVmJyLXUVQoVtnPKkgBc6m"
			]
		},
		"contracts/ShopRegistry.sol": {
			"keccak256": "0xaf0aec45b8793affbf3b6b1a9c7c7c90b63a4f32137554d16da4360f89c81916",
			"license": "MIT",
			"urls": [
				"bzz-raw://2e6bbe84ec37085f4b7d162d57531b2f3d6d73a1e05e2b62fa92054d06ae7455",
				"dweb:/ipfs/QmdSY7DNfr8QxzYaNgX7VeDim87H68UMqREoqDzEpUzADa"
			]
		},
		"contracts/ShopifyPaymentProcessor.sol": {
			"keccak256": "0x7271ec15bbcbbf9503092a47b194697ff92f8dda84c808b5b730cff340adc51c",
			"license": "MIT",
			"urls": [
				"bzz-raw://993ff2dc241313b3d937d6b5c95dd480d07c5a4e85c525abaeaf1e3b91ac58a0",
				"dweb:/ipfs/QmWt8jr2u9BCX97FtcaGHqurkE3QjZGy24YAJKmPXj6pF4"
			]
		},
		"contracts/TokenRegistry.sol": {
			"keccak256": "0xc96ea786d073f97d4987bcc7a129718ed0f26e256fa3592449b383388670662e",
			"license": "MIT",
			"urls": [
				"bzz-raw://37aa0498fe26e82a255fd4d7e250362ebe0a814cf77d3ee1784b197d6f851e29",
				"dweb:/ipfs/QmShtYvSBzq4RpBfGoWJwZ8cpbz8MXDWvnm4RuJHFSeKzX"
			]
		},
		"contracts/TransactionStorage.sol": {
			"keccak256": "0x74765fd9bb66baf1f046cea9dd6da10e4306c28a76cdb815e883e43d3be7bc01",
			"license": "MIT",
			"urls": [
				"bzz-raw://7f5ad03df9b3972d0472073d8fe95025106bc9630c57d6ba719fee7e7ddd9282",
				"dweb:/ipfs/QmVdBkTjdsMsGQYsbPwCbTXZQwNUy6dJKELWoj4qKKaECm"
			]
		},
		"contracts/interfaces/IERC20.sol": {
			"keccak256": "0x4da7067b04d250a783d8cb1bbb183e25ce3bc83eb7c5eb0b54669409c0494d29",
			"license": "MIT",
			"urls": [
				"bzz-raw://1e256cd332e50685f947017507dfedf049f56c59f697240c02b5cd691cf04eea",
				"dweb:/ipfs/Qmd4tiENocoFnEjU7mzME7RCDrbopDM6bPbZJEU7ED6dA5"
			]
		}
	},
	"version": 1
}